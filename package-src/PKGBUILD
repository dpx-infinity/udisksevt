# Contributor: Vladimir Matveev <dpx.infinity at gmail dot com>
#
# Note that in order to build this package you have to install haskell-dbus-core package,
# which depends on haskell-parsec-3.1 or above. Since haskell-parsec from extra repository
# won't upgrade to version 3 in foreseeable future you have to install it modified using
# cabal2arch as follows:
#   % cabal2arch http://hackage.haskell.org/packages/archive/parsec/3.1.0/parsec.cabal
# Then modify PKGBUILD like this:
#   pkgname=haskell-parsec -> pkgname=haskell-parsec3 (something like that)
#   ln -s /usr/share/doc.../html/libraries/parsec -> ln -s /usr/share/doc.../html/libraries/parsec3
# and haskell-parsec.install file:
#   HS_DIR=/usr/share/haskell/haskell-parsec -> HS_DIR=/usr/share/haskell/haskell-parsec3
# Then install package as usual - makepkg && pacman -U haskell-parsec3-whatever.pkg.tar.xz
# Now install haskell-dbus-core and haskell-dbus-client from AUR using your favourite
# program. It will bring some other dependencies though, but you can safely uninstall them
# after compiling, they are not run-time dependencies.

pkgname=udisksevt-git
pkgver=20100612
pkgrel=1
pkgdesc="UDisks events handler daemon"
arch=('i686' 'x86_64')
url="http://github.com/dpx-infinity/udisksevt/"
license=('GPL')
depends=('udisks' 'polkit' 'consolekit' 'dbus' 'gmp')
makedepends=('git' 'ghc' 'haskell-dbus-core' 'haskell-dbus-client' 'haskell-text')
install="udisksevt.install"

_gitroot="git://github.com/dpx-infinity/udisksevt.git"
_gitname="udisksevt"

build() {
  cd "$srcdir"
  msg "Connecting to GIT server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone $_gitroot $_gitname
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting make..."

  rm -rf "$srcdir/$_gitname-build"
  git clone "$srcdir/$_gitname" "$srcdir/$_gitname-build"
  cd "$srcdir/$_gitname-build"

  make configure || return 1
  make || return 1
  
  install -m755 -D ./dist/build/udisksevt/udisksevt $pkgdir/usr/bin/udisksevt || return 1
  install -m644 -D ./udisksevt.conf $pkgdir/usr/share/$pkgname/udisksevt.conf.example || return 1
} 
